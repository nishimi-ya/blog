<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Yapping on Nishimiya</title><link>https://blog.nishimiya.my.id/tags/yapping/</link><description>Recent content in Yapping on Nishimiya</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 31 Dec 2024 16:07:40 +0700</lastBuildDate><atom:link href="https://blog.nishimiya.my.id/tags/yapping/index.xml" rel="self" type="application/rss+xml"/><item><title>Happy New Year! And My Plan for 2025</title><link>https://blog.nishimiya.my.id/post/happy-new-year-and-my-plan-for-2025/</link><pubDate>Tue, 31 Dec 2024 15:35:00 +0700</pubDate><guid>https://blog.nishimiya.my.id/post/happy-new-year-and-my-plan-for-2025/</guid><description>&lt;p>As we step into 2025, I find myself reflecting on the journey that brought
me here. Looking back on 2024, it was a year filled with challenges and
growth. Life wasn’t always easy—managing unpaid debt and juggling daily
expenses made it tough—but it also had its moments of progress and
gratitude.&lt;/p>
&lt;p>One of the most pivotal experiences was starting an internship in August.
At first, I didn’t expect to get paid, so when we were told midway through
the month that salaries would be provided, it felt like a lifeline. While
the income didn’t fully cover my college fee installments, it eased some
of the pressure, and for that, I’m incredibly thankful. By the end of the
three-and-a-half-month internship, we were given the option to continue
working there or explore new opportunities. I decided to stay, knowing
that even though the pay remained the same, it would help me chip away at
my financial challenges.&lt;/p>
&lt;p>Reflecting on this, I’m reminded of another tough but transformative year:
2017. That year taught me the value of resilience and productivity. I was
trying to adjust to balancing school and life, all while indulging in
hobbies like tinkering with Linux and learning how to build websites. It
was one of my most frustrating periods because I felt like I was being
pulled in so many directions. But amid the chaos, I discovered the power
of structured planning. Inspired by Thomas Frank, a YouTube creator and
productivity expert, I started using a calendar to schedule my tasks. That
simple habit helped me bring order to the chaos and achieve a level of
productivity I hadn’t thought possible.&lt;/p>
&lt;p>The lessons I learned in 2017 have stayed with me. I’ve realized that
sometimes, the hardest years are the ones that push us to grow the most.
Now, as I look to 2025, I want to carry forward that same spirit of
resilience and productivity to tackle my goals head-on.&lt;/p>
&lt;h2 id="my-plans-for-2025">My Plans for 2025
&lt;/h2>&lt;p>In 2025, I want to focus on four main areas of my life:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Graduate from College with No Debt&lt;/strong>
My top priority is to finish college on time and debt-free. Clearing my college
dues is a big challenge, but I’m determined to make it happen by working hard,
budgeting wisely, and staying disciplined.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Return to Calendar-Based Task Planning&lt;/strong>&lt;br>
Just like I did in 2017, I want to bring back the habit of scheduling my tasks
on a calendar. That year taught me how powerful structured planning can be. By
organizing my time, I was able to balance school, hobbies, and personal
projects—even during the toughest periods. I’m hoping to recreate that level of
focus and discipline in 2025.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Pursue Tech Projects&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Get an Orange Pi Zero&lt;/strong>&lt;br>
I’ve been dreaming about getting an Orange Pi Zero to set up a tiny MPD
server or even experiment with Jellyfin (though I know it might be too
demanding). My goal is to save enough to buy it by mid-2025. Until then,
I’ll keep using my laptop to host my MPD radio station whenever it’s on.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Host My Own Website&lt;/strong>
Hosting my own website has been a long-standing dream. I’ve explored
platforms like Render.com and Netlify, but they come with their own hurdles.
For now, I’ll stick to using GitHub Pages while I figure out how to overcome
these challenges, like setting environment variables on Netlify or renewing
my debit card for Render.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Build IoT Projects for My Home&lt;/strong>&lt;br>
I’ve always wanted to create IoT projects to make life at home more
efficient and fun. Budget permitting, I plan to dive into these projects in
2025 and maybe even share my experiences in future blog posts.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Write My Thesis&lt;/strong>&lt;br>
Starting in January, I’ll begin writing my thesis. It’s a daunting task, but
I’m ready to approach it with determination and gratitude.&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>PANDI Announces Price Adjustments for .my.id and .biz.id Domains</title><link>https://blog.nishimiya.my.id/post/pandi-announces-price-adjustment-for-domain-name/</link><pubDate>Fri, 27 Dec 2024 16:37:00 +0700</pubDate><guid>https://blog.nishimiya.my.id/post/pandi-announces-price-adjustment-for-domain-name/</guid><description>&lt;img src="https://blog.nishimiya.my.id/post/pandi-announces-price-adjustment-for-domain-name/pandi.jpeg" alt="Featured image of post PANDI Announces Price Adjustments for .my.id and .biz.id Domains" />&lt;p>Recently, I received an email from my domain provider notifying me that PANDI
will increase the prices for .my.id and .biz.id domains starting January 1,
2025. However, this isn’t exactly breaking news. According to &lt;a class="link" href="https://ufal.my.id/2024/03/23/domain-myid-naik/" target="_blank" rel="noopener"
>Ufal Salman’s
blog post&lt;/a>, PANDI actually
made the official announcement on Friday, March 15, 2024. What’s interesting is
that the price adjustment will be rolled out in two phases. The first phase
begins on July 1, 2024, followed by the second phase on January 1, 2025.&lt;/p>
&lt;p>&lt;img src="https://blog.nishimiya.my.id/post/pandi-announces-price-adjustment-for-domain-name/pandi1.png"
width="985"
height="1154"
srcset="https://blog.nishimiya.my.id/post/pandi-announces-price-adjustment-for-domain-name/pandi1_hu_ffa14ed598ee2469.png 480w, https://blog.nishimiya.my.id/post/pandi-announces-price-adjustment-for-domain-name/pandi1_hu_2733a0ae244905ae.png 1024w"
loading="lazy"
alt="PANDI Announcement"
class="gallery-image"
data-flex-grow="85"
data-flex-basis="204px"
>&lt;/p>
&lt;p>Starting July 1, 2024, the renewal price for .my.id domains will rise to
Rp50,000, while .biz.id domains will cost Rp100,000. Then, on January 1, 2025,
both registration and renewal fees will align with these new prices. This is
a significant jump from the previous rates, which ranged between Rp10,000 and
Rp12,000.&lt;/p>
&lt;p>These domains have long been a favorite for many due to their affordability and
availability through numerous local registrars. Whether for personal blogs or
business websites, .my.id and .biz.id have been reliable and cost-effective
choices. However, with the upcoming price increases, some may start exploring
other options.&lt;/p>
&lt;p>When compared to other domains, the new price of .my.id will be similar to
.ac.id, .sch.id, .or.id, and .web.id, which are priced around Rp50,000.
Meanwhile, .id domains remain at Rp220,000, and .co.id at Rp300,000. Despite
the hike, .my.id and .biz.id are still relatively budget-friendly compared to
some premium domains.&lt;/p>
&lt;p>&lt;img src="https://blog.nishimiya.my.id/post/pandi-announces-price-adjustment-for-domain-name/tax.png"
width="638"
height="706"
srcset="https://blog.nishimiya.my.id/post/pandi-announces-price-adjustment-for-domain-name/tax_hu_7fee19752fe3bd39.png 480w, https://blog.nishimiya.my.id/post/pandi-announces-price-adjustment-for-domain-name/tax_hu_e2df080d025949cd.png 1024w"
loading="lazy"
alt="Tax (VAT) rate will increase by 12% starting January 1st 2025"
class="gallery-image"
data-flex-grow="90"
data-flex-basis="216px"
>&lt;/p>
&lt;p>Adding to the recent polemic about tax increases starting January 1, 2025,
my domain provider also shared an email regarding the upcoming changes.
Based on Law No. 7 of 2021 on the Harmonization of Tax Regulations,
specifically Chapter IV Article 7 Paragraph (1), the Value Added Tax (VAT)
rate will increase to 12% starting January 1, 2025. This means that all
transactions, including new purchases and service renewals, will be
subject to the new VAT rate.&lt;/p>
&lt;p>However, the provider clarified that there will be no increase in the base
price of new services or renewals, except for the specific services
previously communicated via email.&lt;/p>
&lt;p>If you’re looking to avoid the higher costs, here’s a tip: consider renewing
your domain now for multiple years, depending on what your registrar offers.
This allows you to lock in the current rate of Rp12,000, even after the price
increase. While it requires a larger upfront payment, it’s a smart way to save
money in the long run. Think of it as an investment in your domain’s future!&lt;/p></description></item><item><title>Be the Landlord of the Web, Not a Peasant</title><link>https://blog.nishimiya.my.id/post/landlord-of-the-web/</link><pubDate>Sun, 01 Dec 2024 00:30:00 +0700</pubDate><guid>https://blog.nishimiya.my.id/post/landlord-of-the-web/</guid><description>&lt;img src="https://blog.nishimiya.my.id/post/landlord-of-the-web/pepe.jpeg" alt="Featured image of post Be the Landlord of the Web, Not a Peasant" />&lt;p>The web isn’t what it used to be. Once a place for creativity,
exploration, and discovery, it’s now a minefield of ads, trackers, and
bloated interfaces designed to keep you scrolling instead of getting
things done. But here’s the thing: you don’t have to be a passive consumer
in this digital kingdom. You can take control. You can own your
experience. You can be the landlord of the web instead of just another
peasant.&lt;/p>
&lt;p>This is my setup for browsing the web—not just through a browser but
beyond it. It’s not perfect, but it works for me. And maybe it’ll get you
thinking about how to reclaim the web for yourself.&lt;/p>
&lt;h2 id="my-browser-setup">My Browser Setup
&lt;/h2>&lt;p>Let’s start with the browser. I use &lt;strong>Brave&lt;/strong> now, but I was a Firefox
user before. Why did I switch? That’s a story for another time. What
matters here is that Brave supports &lt;strong>Manifest V2&lt;/strong>, something Google is
actively trying to kill.&lt;/p>
&lt;p>&lt;img src="https://blog.nishimiya.my.id/post/landlord-of-the-web/manifest-v2.png"
width="676"
height="408"
srcset="https://blog.nishimiya.my.id/post/landlord-of-the-web/manifest-v2_hu_655c3ebbe9e1ae61.png 480w, https://blog.nishimiya.my.id/post/landlord-of-the-web/manifest-v2_hu_920b7927700110c4.png 1024w"
loading="lazy"
alt="Brave support for Manivest V2 Extension"
class="gallery-image"
data-flex-grow="165"
data-flex-basis="397px"
>&lt;/p>
&lt;p>Now, I’m not one for conspiracy theories, but it’s hard to ignore how
convenient it is for Google that &lt;strong>Manifest V3&lt;/strong> cripples ad blockers.
uBlock Origin? Gone from the Chrome Web Store. Why? Because blocking ads
doesn’t exactly line up with Google’s business model. But Brave? Brave
still lets you use those powerful extensions.&lt;/p>
&lt;p>Here’s what I’ve got installed:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>uBlock Origin&lt;/strong> to block ads and trackers.&lt;/li>
&lt;li>&lt;strong>SponsorBlock&lt;/strong> to skip sponsored segments on YouTube.&lt;/li>
&lt;li>&lt;strong>Dark Reader&lt;/strong> because light mode is an assault on my eyes.&lt;/li>
&lt;li>&lt;strong>Vimium&lt;/strong> for fast, keyboard-driven browsing.&lt;/li>
&lt;li>&lt;strong>Proton Pass and VPN&lt;/strong> for security and password management.&lt;/li>
&lt;/ul>
&lt;p>To enable Manifest V2 extensions in Brave:&lt;/p>
&lt;ol>
&lt;li>Open Brave settings&lt;/li>
&lt;li>Search for Manifest V2 extensions&lt;/li>
&lt;li>Enable the extensions, such as uBlock Origin, NoScript, uMatrix, and AdGuard&lt;/li>
&lt;/ol>
&lt;p>With this setup, I don’t have to deal with ads, pop-ups, or other
nonsense. If your browser isn’t giving you that level of control, you’re
doing it wrong.&lt;/p>
&lt;h2 id="youtube-without-the-junk">YouTube Without the Junk
&lt;/h2>&lt;p>Let’s talk about YouTube. It’s a mess—ads everywhere, autoplaying
recommendations, and more distractions than a toddler in a toy store.
Watching a single video shouldn’t feel like navigating a minefield.&lt;/p>
&lt;p>So, here’s what I do:&lt;/p>
&lt;ol>
&lt;li>I use &lt;strong>Invidious&lt;/strong>, an ad-free front-end for YouTube. This instance works
for me: &lt;a class="link" href="https://inv.nadeko.net/" target="_blank" rel="noopener"
>inv.nadeko.net&lt;/a>.&lt;/li>
&lt;li>Export your subscriptions from YouTube.
&lt;ul>
&lt;li>Go to &lt;a class="link" href="https://takeout.google.com/" target="_blank" rel="noopener"
>Google Takeout&lt;/a>, request your YouTube
data, and download it.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Import those subscriptions into Invidious.
&lt;ul>
&lt;li>Once imported, click the &lt;strong>RSS icon&lt;/strong> in your subscriptions tab to
generate a feed (using a token if needed).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Use &lt;strong>Newsboat&lt;/strong>, a command-line RSS reader, to manage subscriptions.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.nishimiya.my.id/post/landlord-of-the-web/bsky-rss-bridge.png"
width="553"
height="344"
srcset="https://blog.nishimiya.my.id/post/landlord-of-the-web/bsky-rss-bridge_hu_b7e8a15bf066e901.png 480w, https://blog.nishimiya.my.id/post/landlord-of-the-web/bsky-rss-bridge_hu_dcc61dcc0be84f26.png 1024w"
loading="lazy"
alt="Fetching bsky post for RSS bridge"
class="gallery-image"
data-flex-grow="160"
data-flex-basis="385px"
>&lt;/p>
&lt;p>Here’s the cool part: I don’t even need a browser to watch YouTube. My
&lt;strong>Newsboat&lt;/strong> config file lets me use &lt;strong>MPV&lt;/strong> to play videos:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">browser qutebrowser
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">macro , open-in-browser
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">macro v set browser &amp;#34;setsid -f mpv --really-quiet --no-terminal&amp;#34;; open-in-browser; set browser browser
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Now I just press &lt;code>,v&lt;/code> in Newsboat, and the video plays in MPV, bypassing
YouTube’s bloated interface entirely.&lt;/p>
&lt;h2 id="social-media-no-thanks">Social Media? No Thanks
&lt;/h2>&lt;p>Social media platforms are time sinks. Endless scrolls, algorithm-driven
feeds, and constant distractions. But you don’t have to quit entirely. You
can still get updates from accounts or topics you care about without
logging into the platforms.&lt;/p>
&lt;p>&lt;img src="https://blog.nishimiya.my.id/post/landlord-of-the-web/newsboat-rss.png"
width="1041"
height="609"
srcset="https://blog.nishimiya.my.id/post/landlord-of-the-web/newsboat-rss_hu_53d476d0172107c1.png 480w, https://blog.nishimiya.my.id/post/landlord-of-the-web/newsboat-rss_hu_c3d0680bb63d7fe3.png 1024w"
loading="lazy"
alt="My bsky feed transformed into RSS feed"
class="gallery-image"
data-flex-grow="170"
data-flex-basis="410px"
>&lt;/p>
&lt;p>I use &lt;strong>RSS-Bridge&lt;/strong>, a tool that turns social media accounts into RSS
feeds. Here’s how:&lt;/p>
&lt;ol>
&lt;li>Visit a public RSS-Bridge instance, like &lt;a class="link" href="https://rss-bridge.org/" target="_blank" rel="noopener"
>RSS-Bridge&lt;/a>.&lt;/li>
&lt;li>Search for a service, such as Bluesky, and enter the user’s handle.&lt;/li>
&lt;li>Customize filters if needed and generate the feed.&lt;/li>
&lt;li>Copy the &lt;strong>MRSS&lt;/strong> or &lt;strong>Atom&lt;/strong> link and add it to your RSS reader.&lt;/li>
&lt;/ol>
&lt;p>For example, you can follow Bluesky accounts without ever opening Bluesky.
Not all bridges are perfect, but they work well enough to cut the noise
and give you only what you need.&lt;/p>
&lt;hr>
&lt;h2 id="so-whats-the-point">So What’s the Point?
&lt;/h2>&lt;p>The big players of the internet—Google, Meta, YouTube—they’re not looking
out for you. They want your data, your clicks, your time. They’ve turned
the web into a space designed to exploit, distract, and monetize.&lt;/p>
&lt;p>But you don’t have to play along. You can carve out a web experience that
works for you. Use tools like Brave, Invidious, RSS-Bridge, and Newsboat
to reclaim control. Cut the bloat, skip the noise, and focus on what
matters to you.&lt;/p>
&lt;p>It’s not about being perfect or even radically different. It’s about
realizing you have a choice. You don’t have to be a passive consumer in
someone else’s digital kingdom. You can be the landlord. You just have to
take the first step.&lt;/p></description></item><item><title>Computers were faster when they were slower!</title><link>https://blog.nishimiya.my.id/post/computer-were-faster-when-they-were-slower/</link><pubDate>Sat, 30 Nov 2024 10:25:00 +0700</pubDate><guid>https://blog.nishimiya.my.id/post/computer-were-faster-when-they-were-slower/</guid><description>&lt;img src="https://blog.nishimiya.my.id/post/computer-were-faster-when-they-were-slower/moore.jpeg" alt="Featured image of post Computers were faster when they were slower!" />&lt;p>There’s a paradox in modern computing: computers today are faster, more
powerful, and sleeker than ever before, yet they often &lt;em>feel&lt;/em> slower when doing
everyday tasks. How can this be true? The answer lies in a growing mismatch
between hardware advancements and software development practices.&lt;/p>
&lt;h2 id="the-promise-of-moores-law">The Promise of Moore&amp;rsquo;s Law
&lt;/h2>&lt;p>You’ve probably heard of &lt;strong>Moore&amp;rsquo;s Law&lt;/strong>, the observation made by Gordon Moore
in 1965 that the number of transistors in an integrated circuit doubles
approximately every two years. This doubling translates to exponential growth in
computing power. For decades, this trend held true, allowing computers to become
faster and more capable at an astonishing rate.&lt;/p>
&lt;p>But while hardware performance has skyrocketed, the way we write software has
changed dramatically, and not always for the better.&lt;/p>
&lt;h2 id="the-reality-of-modern-software">The Reality of Modern Software
&lt;/h2>&lt;p>In the early days of computing, resources were scarce. Developers had to be
highly efficient, squeezing every ounce of performance out of limited hardware.
Programs were carefully written to minimize memory use and maximize speed. But
today, those constraints are less pressing. Why? Because hardware is &amp;ldquo;fast
enough&amp;rdquo; to accommodate less efficient software. Or at least, that’s the
assumption.&lt;/p>
&lt;p>Take modern applications: instead of being optimized for speed and efficiency,
they’re often bloated with unnecessary features, redundant processes, and layers
of abstraction. Think of a simple text editor. In the past, it might have been
a few kilobytes in size, designed to launch instantly and use minimal system
resources. Today’s equivalent might consume hundreds of megabytes, taking
seconds to load, even though it fundamentally performs the same function.&lt;/p>
&lt;h2 id="the-bandwidth-vs-processing-paradox">The Bandwidth vs. Processing Paradox
&lt;/h2>&lt;p>While internet bandwidth and storage capacities have dramatically increased, the
responsiveness of software hasn’t kept pace. Consider web applications. Are they
twice as fast as they were two years ago? Probably not. The complexity of modern
web technologies—frameworks, plugins, and bloated libraries—often offsets the
benefits of faster internet and improved hardware.&lt;/p>
&lt;h2 id="an-embarrassing-anecdote">An Embarrassing Anecdote
&lt;/h2>&lt;p>Here’s a real-life example of the inefficiency problem. A developer needed to
number the lines of a text file. Instead of using a built-in Unix utility like
&lt;code>nl&lt;/code>, which does this instantly, they wrote a Python script that looped through
the file line by line. The script was not only redundant but far slower than the
existing tool.&lt;/p>
&lt;p>Why did this happen? Likely because the developer wasn’t familiar with the
utilities already available on their system. This lack of awareness is
increasingly common. Instead of learning to use efficient, purpose-built tools,
many programmers default to reinventing the wheel, often less effectively.&lt;/p>
&lt;h2 id="the-layers-of-abstraction">The Layers of Abstraction
&lt;/h2>&lt;p>Another culprit is the growing reliance on layers of abstraction. Modern
software often sits atop frameworks, libraries, and APIs that insulate
developers from the underlying hardware. While abstraction makes development
faster and more accessible, it can also lead to inefficiencies. For example,
a web application might load dozens of unnecessary libraries to perform a single
task, consuming memory and processing power needlessly.&lt;/p>
&lt;h2 id="the-snowball-effect-of-inefficiency">The Snowball Effect of Inefficiency
&lt;/h2>&lt;p>When everyone writes inefficient code, the inefficiencies accumulate. The result? Computers that are orders of magnitude more powerful than their predecessors often feel just as slow—or slower—because they’re bogged down by bloated software.&lt;/p>
&lt;p>This trend is particularly noticeable in areas like:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Web browsers&lt;/strong>, which consume gigabytes of RAM to load basic websites.&lt;/li>
&lt;li>&lt;strong>Operating systems&lt;/strong>, which include countless background processes and telemetry features.&lt;/li>
&lt;li>&lt;strong>Games&lt;/strong>, which rely on technologies like DLSS or FSR to compensate for inefficient rendering pipelines.&lt;/li>
&lt;/ul>
&lt;h2 id="the-path-forward">The Path Forward
&lt;/h2>&lt;p>The solution isn’t to stop using modern tools or frameworks—they’ve made
incredible advancements possible. But we do need to strike a balance. Developers
should:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Learn the Basics&lt;/strong>: Familiarize themselves with existing tools and
utilities. Why write a script when a built-in command will do?&lt;/li>
&lt;li>&lt;strong>Focus on Efficiency&lt;/strong>: Write code that’s not just functional but also
optimized for performance.&lt;/li>
&lt;li>&lt;strong>Avoid Unnecessary Complexity&lt;/strong>: Use only the features and libraries truly
needed for the task at hand.&lt;/li>
&lt;li>&lt;strong>Adopt a Minimalist Mindset&lt;/strong>: Sometimes, less is more.&lt;/li>
&lt;/ol>
&lt;h2 id="conclusion">Conclusion
&lt;/h2>&lt;p>As computers continue to grow more powerful, it’s crucial that we don’t take
this progress for granted. Moore’s Law may keep advancing hardware capabilities,
but it’s up to us to ensure that software development keeps pace. Otherwise,
we’ll be stuck in a world where faster computers only mean slower programs.&lt;/p></description></item><item><title>Changing the Social Media Paradigm</title><link>https://blog.nishimiya.my.id/post/social-media-paradigm/</link><pubDate>Thu, 07 Nov 2024 01:40:00 +0700</pubDate><guid>https://blog.nishimiya.my.id/post/social-media-paradigm/</guid><description>&lt;img src="https://blog.nishimiya.my.id/post/social-media-paradigm/hero-image.webp" alt="Featured image of post Changing the Social Media Paradigm" />&lt;p>Social media has revolutionized how we communicate, but the dynamics of major
platforms like Twitter have grown increasingly problematic. Despite its mass
appeal, Twitter’s model centers on engagement maximization, frequently elevating
divisive or controversial content that keeps users hooked and engaged for
profit. However, a wave of decentralized platforms, such as Mastodon, Bluesky,
and others on the Fediverse, offer an alternative approach that challenges
Twitter&amp;rsquo;s engagement-driven model. Understanding the differences between these
platforms reveals why a shift in our approach to social media could benefit
society as a whole.&lt;/p>
&lt;h2 id="the-twitter-model-engagement-at-all-costs">The Twitter Model: Engagement at All Costs
&lt;/h2>&lt;p>Twitter&amp;rsquo;s design has always prioritized engagement. Upon logging in, users are
bombarded with tweets that the platform’s algorithm considers likely to elicit
strong reactions. It’s no secret that highly engaging content often means
divisive, controversial, or sensational material. Posts from political extremes
or inflammatory &amp;ldquo;hot takes&amp;rdquo; are algorithmically favored because they drive
comments, shares, and responses, ultimately resulting in more time spent on the
platform.&lt;/p>
&lt;p>Under Elon Musk&amp;rsquo;s leadership, Twitter added a new revenue-driven dimension to
this engagement model. The introduction of subscription-based blue and gold
checkmarks exemplifies this shift, allowing users to boost their visibility for
a fee. The model incentivizes “pay-to-play” dynamics that reinforce Twitter’s
corporate-driven focus: maximizing attention and profit at the expense of
balanced, organic user engagement.&lt;/p>
&lt;p>Additionally, Twitter’s centralized structure means that a single corporate
entity controls the algorithms, user data, and rules of engagement, shaping
content visibility according to business interests. In contrast, the rise of
decentralized social networks like Bluesky and the Fediverse offers a fresh
perspective on how social media could function more equitably.&lt;/p>
&lt;h2 id="decentralized-platforms-a-new-social-media-paradigm">Decentralized Platforms: A New Social Media Paradigm
&lt;/h2>&lt;p>Unlike Twitter, platforms like Mastodon, Bluesky, and other Fediverse-based
networks operate on decentralized principles. This shift fundamentally changes
how users interact, curate content, and govern their social media experience.&lt;/p>
&lt;p>Bluesky, for instance, resembles Twitter’s interface, but it breaks away from
the engagement-first approach by using the “AT Protocol,” which decentralizes
social media hosting and management. Instead of an algorithmically driven feed
that maximizes engagement, Bluesky puts content control in users’ hands,
offering options like &amp;ldquo;More Posts Like This&amp;rdquo; or &amp;ldquo;Less Posts Like This.&amp;rdquo; This
simple preference mechanism gives users greater agency in tailoring their feeds
without relying on corporate algorithms.&lt;/p>
&lt;p>The AT Protocol also introduces a decentralized identity structure, often
abbreviated as DID (Decentralized Identifier). This protocol empowers users to
manage their online identity across different platforms without being tied to
a single corporate entity. A DID is a unique identifier that’s authenticated via
blockchain-like protocols, allowing users to move across compatible networks
while retaining their identity and data.&lt;/p>
&lt;p>Moreover, Bluesky’s system allows users to register domain names as
usernames—something that costs as little as $1. This affordable, user-centric
identity structure contrasts with Twitter&amp;rsquo;s blue-checkmark model, which offers
verification and engagement boosts at a premium. In essence, Bluesky values
accessibility and user autonomy over profit, opening a door for more equitable
social media practices.&lt;/p>
&lt;h2 id="the-fediverse-a-decentralized-network-of-social-platforms">The Fediverse: A Decentralized Network of Social Platforms
&lt;/h2>&lt;p>In addition to Bluesky, the Fediverse is a collection of decentralized social
networks, each hosting independent communities while allowing cross-platform
interaction. Platforms like Mastodon operate on open-source protocols that
anyone can use to create their own social space, making it inherently
community-driven. Unlike Twitter’s top-down approach, the Fediverse enables
a bottom-up structure where individual servers (or “instances”) are
independently managed, giving power to the community rather than to a corporate
overseer.&lt;/p>
&lt;p>This decentralized structure means that each community has its own moderation
rules and culture, reducing the influence of profit-driven algorithms and
allowing users to escape the echo chambers often exacerbated by mainstream
social media. The Fediverse encourages organic, interest-based networking, free
from engagement-manipulating algorithms, ultimately offering a healthier, more
intentional social media experience.&lt;/p>
&lt;h2 id="why-this-shift-matters">Why This Shift Matters
&lt;/h2>&lt;p>As digital citizens, we must consider the impact of algorithm-driven engagement
on our online behavior and mental health. Twitter&amp;rsquo;s centralized and
profit-oriented model fosters divisiveness and “doomscrolling,” but
decentralized platforms encourage users to make more intentional choices.
Decentralized social networks like Bluesky, Mastodon, and others in the
Fediverse are designed to prioritize user control, community governance, and
genuine interaction over sensationalism and profit.&lt;/p>
&lt;p>This shift requires a collective change in mindset. Embracing decentralized
platforms means choosing a more user-centered approach to social media, one that
values authentic interaction over the “likes” and “shares” race. It’s a paradigm
shift that prioritizes our well-being and fosters healthier online communities.&lt;/p>
&lt;p>While Twitter may still hold a prominent place in the social media landscape,
its centralized, profit-driven model doesn’t have to be the default.
Decentralized networks like Bluesky and the Fediverse offer a new way forward,
one that we should seriously consider as we continue to navigate the complex
world of online communication.&lt;/p></description></item></channel></rss>